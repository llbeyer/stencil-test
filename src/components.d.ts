/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface MtButton {
        /**
          * The color which corresponds to the state
         */
        "color": 'primary' | 'warn' | 'error';
        /**
          * User can not interact with the element when true
         */
        "disabled": string | boolean;
        /**
          * Whether the button is displayed with a label only, label and icon or icon only
         */
        "type": 'flat' | 'elevated' | 'text';
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
}
declare global {
    interface HTMLMtButtonElement extends Components.MtButton, HTMLStencilElement {
    }
    var HTMLMtButtonElement: {
        prototype: HTMLMtButtonElement;
        new (): HTMLMtButtonElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLElementTagNameMap {
        "mt-button": HTMLMtButtonElement;
        "my-component": HTMLMyComponentElement;
    }
}
declare namespace LocalJSX {
    interface MtButton {
        /**
          * The color which corresponds to the state
         */
        "color"?: 'primary' | 'warn' | 'error';
        /**
          * User can not interact with the element when true
         */
        "disabled"?: string | boolean;
        /**
          * Emits when the button was clicked
         */
        "onClicked"?: (event: CustomEvent<void>) => void;
        /**
          * Emits when the disabled state changes
         */
        "onDisabledChanged"?: (event: CustomEvent<boolean>) => void;
        /**
          * Whether the button is displayed with a label only, label and icon or icon only
         */
        "type"?: 'flat' | 'elevated' | 'text';
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface IntrinsicElements {
        "mt-button": MtButton;
        "my-component": MyComponent;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "mt-button": LocalJSX.MtButton & JSXBase.HTMLAttributes<HTMLMtButtonElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
        }
    }
}
